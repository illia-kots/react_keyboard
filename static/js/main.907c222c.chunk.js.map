{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentKeyUp","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,GAFhB,EAaEC,oBAAsB,SAACC,GACrB,IAAMF,EAAaE,EAAMC,IAEzB,EAAKC,SAAS,CAAEJ,gBAhBpB,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,UACkB,IAAfT,EACG,0BADH,mCAE+BA,EAF/B,aAzBX,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.907c222c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: false,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  handleDocumentKeyUp = (event: KeyboardEvent) => {\n    const pressedKey = event.key;\n\n    this.setState({ pressedKey });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey === false\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}